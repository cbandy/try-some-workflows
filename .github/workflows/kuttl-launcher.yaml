# https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions

name: KUTTL Launcher
on:
  workflow_dispatch:
    inputs:
      kubernetes-provider:
        default: GKE
        required: true
        type: choice
        options:
          - GKE
          - k3d
          - OpenShift
        description: >
          TODO
      kubernetes:
        default: latest
        required: true
        type: string
        description: >
          TODO

jobs:
  parameters:
    runs-on: ubuntu-latest
    outputs:
      kubernetes: ${{ steps.kubernetes.outputs.matrix }}
      base-image: ${{ steps.components.outputs.base-image }}
      postgresql: ${{ steps.components.outputs.postgresql }}
    steps:
      - uses: actions/checkout@v3

      - env: { JSON: "${{ toJSON(github.event.inputs) }}" }
        run: |
          echo >> "${GITHUB_STEP_SUMMARY}" '```json'
          jq   >> "${GITHUB_STEP_SUMMARY}" <<< "${JSON}"
          echo >> "${GITHUB_STEP_SUMMARY}" '```'

      - id: components
        run: |
          # TODO: Compare to event inputs; "all", "latest", etc.

          echo ::set-output 'name=base-image::["ubi8"]'
          echo ::set-output 'name=postgresql::[10,11,12,13,14]'

      - id: google-gke
        if: ${{ github.event.inputs.kubernetes-provider == 'GKE' }}
        uses: ./.github/actions/google-gke
        with:
          stage: versions
          k8s-release: ${{ github.event.inputs.kubernetes }}

      - id: k3d
        if: ${{ github.event.inputs.kubernetes-provider == 'k3d' }}
        uses: ./.github/actions/k3d
        with:
          stage: versions
          k8s-release: ${{ github.event.inputs.kubernetes }}

      - id: kubernetes
        env:
          GOOGLE_GKE: ${{ steps.google-gke.outputs.versions }}
          K3D: ${{ steps.k3d.outputs.versions }}
        run: |
          VERSIONS=$(jq -n '$gke + $k3d' \
            --argjson gke "${GOOGLE_GKE:-[]}" \
            --argjson k3d "${K3D:-[]}" \
            --compact-output)

          echo ::set-output "name=matrix::${VERSIONS}"

  test-v1-19:
    name: K8s v1.19
    if: ${{ contains(fromJSON(needs.parameters.outputs.kubernetes), 'v1.19') }}
    needs: [parameters]
    uses: ./.github/workflows/kuttl.yaml
    with:
      kubernetes: v1.19
      base-image-matrix: ${{ needs.parameters.outputs.base-image }}
      postgresql-matrix: ${{ needs.parameters.outputs.postgresql }}

  test-v1-20:
    name: K8s v1.20
    if: ${{ contains(fromJSON(needs.parameters.outputs.kubernetes), 'v1.20') }}
    needs: [parameters]
    uses: ./.github/workflows/kuttl.yaml
    with:
      kubernetes: v1.20
      base-image-matrix: ${{ needs.parameters.outputs.base-image }}
      postgresql-matrix: ${{ needs.parameters.outputs.postgresql }}

  test-v1-21:
    name: K8s v1.21
    if: ${{ contains(fromJSON(needs.parameters.outputs.kubernetes), 'v1.21') }}
    needs: [parameters]
    uses: ./.github/workflows/kuttl.yaml
    with:
      kubernetes: v1.21
      base-image-matrix: ${{ needs.parameters.outputs.base-image }}
      postgresql-matrix: ${{ needs.parameters.outputs.postgresql }}

  test-v1-22:
    name: K8s v1.22
    if: ${{ contains(fromJSON(needs.parameters.outputs.kubernetes), 'v1.22') }}
    needs: [parameters]
    uses: ./.github/workflows/kuttl.yaml
    with:
      kubernetes: v1.22
      base-image-matrix: ${{ needs.parameters.outputs.base-image }}
      postgresql-matrix: ${{ needs.parameters.outputs.postgresql }}

  test-v1-23:
    name: K8s v1.23
    if: ${{ contains(fromJSON(needs.parameters.outputs.kubernetes), 'v1.23') }}
    needs: [parameters]
    uses: ./.github/workflows/kuttl.yaml
    with:
      kubernetes: v1.23
      base-image-matrix: ${{ needs.parameters.outputs.base-image }}
      postgresql-matrix: ${{ needs.parameters.outputs.postgresql }}

  test-v1-24:
    name: K8s v1.24
    if: ${{ contains(fromJSON(needs.parameters.outputs.kubernetes), 'v1.24') }}
    needs: [parameters]
    uses: ./.github/workflows/kuttl.yaml
    with:
      kubernetes: v1.24
      base-image-matrix: ${{ needs.parameters.outputs.base-image }}
      postgresql-matrix: ${{ needs.parameters.outputs.postgresql }}
